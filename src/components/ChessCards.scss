
@use '../variables';

.cards-container {
  display: flex;
  flex-direction: column;
  position: relative;
  justify-content: center;
  align-items: center;
  height: 65vh;
  margin: 50px 0;
  background-color: variables.$bg-color;
  // background-image: url("../../files/images/sine-lines-grad.png");
  // background: 
  //   linear-gradient(to bottom, rgba(0,0,0,0), variables.$bg-color-top), /* gradient overlay */
  //   url("../../files/images/sine-lines-grad.png") no-repeat center center; /* background image */
  // background-size: cover; /* makes the image cover the element */
}

.bg-images-container {
  position: absolute;
  top: 0; 
  left: 0; 
  right: 0;
  bottom: 0;
  display: flex; /* put images side by side */
  gap: 50px;
  padding: 50px 100px;
  justify-content: center;
  z-index: 1;

  background: linear-gradient(to bottom, variables.$bg-color 0%, rgba(variables.$fg-color, 0.04) 10%, rgba(variables.$fg-color, 0.04) 90%, variables.$bg-color 100%);
  // box-shadow: 0 0 20px 20px rgba(variables.$fg-color, 0.04);
}
.bg-images-container.glitching {
  animation: container-glitch 1s steps(1);
}
.bg-images-container .bg-img {
  // flex: 1;
  object-fit: cover;
  filter: opacity(0.75); //hue-rotate(-10deg)
  // box-shadow: 0 0 20px 20px rgba(variables.$fg-color, 0.02);
  // background-color: rgba(variables.$fg-color, 0.02);
  border-radius: 10px;
}
.bg-images-container .joker {
  cursor: pointer;
}

@keyframes container-glitch {
  0% {
    transform: none;
    filter: none;
  }

  /* first cluster of jitter */
  10% {
    transform: translate(-2px, 2px) skew(2deg) translateX(-2%);
    filter: hue-rotate(90deg) contrast(200%);
  }
  12% {
    transform: translate(3px, -1px) skew(-2deg) translateX(2%);
    filter: hue-rotate(180deg) brightness(1.5);
  }
  14% {
    transform: translate(-1px, 1px);
    filter: none;
  }

  /* second cluster of jitter */
  60% {
    transform: translate(2px, -2px) translateX(-1%);
    filter: hue-rotate(45deg) saturate(150%);
  }
  62% {
    transform: translate(-3px, 1px) translateX(1%);
    filter: hue-rotate(200deg) contrast(180%);
  }
  64% {
    transform: none;
    filter: none;
  }

  100% {
    transform: none;
    filter: none;
  }
}

/* Developer's Note: I need to put this somewhere, so I'm putting it here.

HOW I MADE THE "CODE" PLAYING CARDS -

1. Take the image (PNG with transparent background) and put it into a photo editor (I used Photopea online)
2. Add a new text layer and paste in your 'Lorem Ipsum' type code.
  I used 17pt font - Deja Vu Sans. I played around with it until the top and bottom card borders both lined up with a single line of code.
3. Drag the image layer above the text layer, and turn it into a Clipping Mask.
4. Cmd-Click the thumbnail of the image layer to select all text that wasn't overlaying the image.
5. Go back to the text layer and click 'Add Raster Mask' - I found this as an icon at the bottom of the Layers panel.

You should be left with text in the shape of your image. After step 5, the text that overlayed the transparent parts of the PNG should have disappeared.
*/
